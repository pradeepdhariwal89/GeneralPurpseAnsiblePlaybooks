---
# Fedora 41 Server Configuration Playbook

- name: Configure Fedora 41 server
  hosts: fedora-server
  become: yes
  vars:
    # Network configuration
    new_hostname: "devserver-f41"  # Replace with your desired hostname
    new_ip: "192.168.1.100"        # Replace with your desired IP
    network_interface: "eth0"      # Replace with your network interface name
    network_gateway: "192.168.1.1" # Replace with your network gateway
    network_dns:
      - "8.8.8.8"
      - "8.8.4.4"
    
  tasks:
    - name: Install python
      command: dnf install python -y
      register: install_status
      changed_when: "'Installing' in install_status.stdout"

    - name: Install dnf dependencies
      command: dnf install python3-libdnf5 -y
      register: install_status
      changed_when: "'Installing' in install_status.stdout"

    # Update system packages
    - name: Update dnf cache
      dnf:
        update_cache: yes
    
    - name: Upgrade all packages
      dnf:
        name: "*"
        state: latest

    # Change hostname
    - name: Set new hostname
      hostname:
        name: "{{ new_hostname }}"
      
    - name: Update /etc/hosts file with new hostname
      lineinfile:
        path: /etc/hosts
        regexp: '^127.0.1.1'
        line: '127.0.1.1 {{ new_hostname }}'
        state: present
    
    # Configure static IP
    - name: Check if network configuration file exists
      stat:
        path: /etc/NetworkManager/system-connections/{{ network_interface }}.nmconnection
      register: network_file

    - name: Configure network connection with static IP
      copy:
        dest: /etc/NetworkManager/system-connections/{{ network_interface }}.nmconnection
        content: |
          [connection]
          id={{ network_interface }}
          type=ethernet
          interface-name={{ network_interface }}
          autoconnect=true

          [ethernet]
          mac-address-blacklist=

          [ipv4]
          method=manual
          addresses={{ new_ip }}/24
          gateway={{ network_gateway }}
          dns={{ network_dns | join(';') }}
          
          [ipv6]
          method=auto
        mode: 0600
      when: not network_file.stat.exists
      register: network_config
    
    - name: Restart NetworkManager service
      systemd:
        name: NetworkManager
        state: restarted
      when: network_config.changed
    
    # Final system restart
    - name: Restart system to apply all changes
      reboot:
        reboot_timeout: 300
        post_reboot_delay: 30
      when: network_config.changed
